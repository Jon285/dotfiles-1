#!/usr/bin/env bash
CONNECTION_TYPE="$(ip route get 1 | head -1 | awk '{print($5);}')"
LOCAL_IPADDR="$(ip route get 1 | head -1 | awk '{print($7);}')"
SSID_NAME="$(iwgetid -r)"
DNSCRYPT="$(ps aux | grep dnscrypt | wc -l)"

if_eth="$(ip link | grep enp | awk '{printf("%s\n", $2);}' | cut -d : -f 1)"
if_wifi='wlp2s0'
if_vpn='tun0'

icon_wifi=""
icon_eth=""
icon_dns=""
icon_vpn=""
icon_off=""

FINAL_OPT=""

# first, check if we are connected to a wireless AP.
# method: check if SSID_NAME is not an empty string.
if [ -n "$SSID_NAME" ]; then
    # append wifi logo and AP name to FINAL_OPT.
    FINAL_OPT+="$icon_wifi"
    
    # detect dnscrypt and vpn connection.
    if [ $DNSCRYPT = 2 ]; then
        FINAL_OPT+="  $icon_dns"
    fi

    if [ $CONNECTION_TYPE = $if_vpn ]; then
        FINAL_OPT+=" $icon_vpn"
    else
        true
    fi

    echo "$FINAL_OPT "

# secondly, check if an Ethernet connection is active.
# method: check if we cannot detect wlp2s0 but acutually get a local ip.
elif [ $CONNECTION_TYPE != "$if_wifi" ] && [ -n "$LOCAL_IPADDR" ]; then
    # append ethernet logo and "ETHERNET" to FINAL_OPT.
    # TODO: Ethernet with vpn output.
    FINAL_OPT+="$icon_eth"
    
    # detect dnscrypt and vpn connection.
    if [ $DNSCRYPT = 2 ]; then
        FINAL_OPT+="  $icon_dns"
    fi

    if [ $CONNECTION_TYPE = $if_vpn ]; then
        FINAL_OPT+=" $icon_vpn"
    else
        true
    fi
    
    echo "$FINAL_OPT "

# there's no Internet connection otherwise.
else
    echo "$icon_off "
fi
